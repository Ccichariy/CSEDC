"""Add GradeLevelSkill & Concept models

Revision ID: 74dfd4be9fe3
Revises: b03b535d72b0
Create Date: 2025-08-13 17:46:51.963759

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")
if SCHEMA:
    SCHEMA = SCHEMA.lower()


# revision identifiers, used by Alembic.
revision = '74dfd4be9fe3'
down_revision = 'b03b535d72b0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'grade_level_skills',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('title', sa.String(length=100), nullable=False),
        sa.Column('overview', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table(
        'concepts',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('grade_level_skill_id', sa.Integer(), nullable=False),
        sa.Column('title', sa.String(length=255), nullable=False),
        sa.Column('overview', sa.Text(), nullable=True),
        sa.Column('exit_ticket', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ['grade_level_skill_id'],
            ['grade_level_skills.id'],
            name='fk_concepts_grade_level_skill_id'
        ),
        sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('filters', schema=None) as batch_op:
        batch_op.add_column(sa.Column('video_id', sa.Integer(), nullable=False))
        # rename this fk from None to a named constraint
        batch_op.create_foreign_key(
            'fk_filters_video_id_videos',
            'videos',
            ['video_id'],
            ['id']
        )
    
    if environment == "production":
        op.execute(f"ALTER TABLE grade_level_skills SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE concepts SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('filters', schema=None) as batch_op:
        # drop by the same name you gave it above
        batch_op.drop_constraint('fk_filters_video_id_videos', type_='foreignkey')
        batch_op.drop_column('video_id')

    op.drop_table('concepts')
    op.drop_table('grade_level_skills')
    # ### end Alembic commands ###